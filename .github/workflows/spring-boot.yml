name: CI/CD Pipeline for Spring Boot

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:8.0
        ports:
          - 3307:3306
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: piplinecicd
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      # Cache Maven dependencies
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Build the application
      - name: Build with Maven
        run: mvn clean package --file pom.xml

      # Run tests
      - name: Run Tests
        run: mvn test

      # Start the application
      - name: Run Spring Boot App
        run: |
          nohup mvn spring-boot:run &
          sleep 60

      # Test API with cURL
      - name: Test API with cURL
        run: |
          # Tester une requÃªte GET
          curl --fail http://localhost:8080/api/employees/test/workflow || exit 1


      # Login DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username : ${{ secrets.DOCKERHUB_USERNAME }}
          password : ${{ secrets.DOCKERHUB_TOKEN }}


      # Build Docker image
      - name: Build Docker image
        run: docker build -t "${{ secrets.DOCKERHUB_USERNAME }}"/piplinecicd:latest .

      # Push Docker image to Docker Hub
      - name: Push to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          docker push "${{ secrets.DOCKERHUB_USERNAME }}"/piplinecicd:latest